{"version":3,"file":"GsiTerrainProvider.js","sources":["../node_modules/iota-array/iota.js","../node_modules/is-buffer/index.js","../node_modules/ndarray/ndarray.js","../src/dom-pixels.js","../node_modules/@mapbox/martini/index.js","../src/terrain-provider.ts"],"sourcesContent":["\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n      case \"[object BigInt64Array]\":\n        return \"bigint64\"\n      case \"[object BigUint64Array]\":\n        return \"biguint64\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"bigint64\": [],\n  \"biguint64\": [],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","/* from get-pixels 3.3.3\nThe MIT License (MIT)\n\nCopyright (c) 2013 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n'use strict'\n\nvar ndarray       = require('ndarray')\n\nfunction defaultImage(url, cb) {\n  var img = new Image()\n  img.crossOrigin = \"Anonymous\"\n  img.onload = function() {\n    var canvas = document.createElement('canvas')\n    canvas.width = img.width\n    canvas.height = img.height\n    var context = canvas.getContext('2d')\n    context.drawImage(img, 0, 0)\n    var pixels = context.getImageData(0, 0, img.width, img.height)\n    cb(null, ndarray(new Uint8Array(pixels.data), [img.width, img.height, 4], [4, 4*img.width, 1], 0))\n  }\n  img.onerror = function(err) {\n    cb(err)\n  }\n  img.src = url\n}\n\nmodule.exports = function getPixels(url, type, cb) {\n  if(!cb) {\n    cb = type\n    type = ''\n  }\n  defaultImage(url, cb)\n}\n","\nexport default class Martini {\n    constructor(gridSize = 257) {\n        this.gridSize = gridSize;\n        const tileSize = gridSize - 1;\n        if (tileSize & (tileSize - 1)) throw new Error(\n            `Expected grid size to be 2^n+1, got ${gridSize}.`);\n\n        this.numTriangles = tileSize * tileSize * 2 - 2;\n        this.numParentTriangles = this.numTriangles - tileSize * tileSize;\n\n        this.indices = new Uint32Array(this.gridSize * this.gridSize);\n\n        // coordinates for all possible triangles in an RTIN tile\n        this.coords = new Uint16Array(this.numTriangles * 4);\n\n        // get triangle coordinates from its index in an implicit binary tree\n        for (let i = 0; i < this.numTriangles; i++) {\n            let id = i + 2;\n            let ax = 0, ay = 0, bx = 0, by = 0, cx = 0, cy = 0;\n            if (id & 1) {\n                bx = by = cx = tileSize; // bottom-left triangle\n            } else {\n                ax = ay = cy = tileSize; // top-right triangle\n            }\n            while ((id >>= 1) > 1) {\n                const mx = (ax + bx) >> 1;\n                const my = (ay + by) >> 1;\n\n                if (id & 1) { // left half\n                    bx = ax; by = ay;\n                    ax = cx; ay = cy;\n                } else { // right half\n                    ax = bx; ay = by;\n                    bx = cx; by = cy;\n                }\n                cx = mx; cy = my;\n            }\n            const k = i * 4;\n            this.coords[k + 0] = ax;\n            this.coords[k + 1] = ay;\n            this.coords[k + 2] = bx;\n            this.coords[k + 3] = by;\n        }\n    }\n\n    createTile(terrain) {\n        return new Tile(terrain, this);\n    }\n}\n\nclass Tile {\n    constructor(terrain, martini) {\n        const size = martini.gridSize;\n        if (terrain.length !== size * size) throw new Error(\n            `Expected terrain data of length ${size * size} (${size} x ${size}), got ${terrain.length}.`);\n\n        this.terrain = terrain;\n        this.martini = martini;\n        this.errors = new Float32Array(terrain.length);\n        this.update();\n    }\n\n    update() {\n        const {numTriangles, numParentTriangles, coords, gridSize: size} = this.martini;\n        const {terrain, errors} = this;\n\n        // iterate over all possible triangles, starting from the smallest level\n        for (let i = numTriangles - 1; i >= 0; i--) {\n            const k = i * 4;\n            const ax = coords[k + 0];\n            const ay = coords[k + 1];\n            const bx = coords[k + 2];\n            const by = coords[k + 3];\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n            const cx = mx + my - ay;\n            const cy = my + ax - mx;\n\n            // calculate error in the middle of the long edge of the triangle\n            const interpolatedHeight = (terrain[ay * size + ax] + terrain[by * size + bx]) / 2;\n            const middleIndex = my * size + mx;\n            const middleError = Math.abs(interpolatedHeight - terrain[middleIndex]);\n\n            errors[middleIndex] = Math.max(errors[middleIndex], middleError);\n\n            if (i < numParentTriangles) { // bigger triangles; accumulate error with children\n                const leftChildIndex = ((ay + cy) >> 1) * size + ((ax + cx) >> 1);\n                const rightChildIndex = ((by + cy) >> 1) * size + ((bx + cx) >> 1);\n                errors[middleIndex] = Math.max(errors[middleIndex], errors[leftChildIndex], errors[rightChildIndex]);\n            }\n        }\n    }\n\n    getMesh(maxError = 0) {\n        const {gridSize: size, indices} = this.martini;\n        const {errors} = this;\n        let numVertices = 0;\n        let numTriangles = 0;\n        const max = size - 1;\n\n        // use an index grid to keep track of vertices that were already used to avoid duplication\n        indices.fill(0);\n\n        // retrieve mesh in two stages that both traverse the error map:\n        // - countElements: find used vertices (and assign each an index), and count triangles (for minimum allocation)\n        // - processTriangle: fill the allocated vertices & triangles typed arrays\n\n        function countElements(ax, ay, bx, by, cx, cy) {\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n\n            if (Math.abs(ax - cx) + Math.abs(ay - cy) > 1 && errors[my * size + mx] > maxError) {\n                countElements(cx, cy, ax, ay, mx, my);\n                countElements(bx, by, cx, cy, mx, my);\n            } else {\n                indices[ay * size + ax] = indices[ay * size + ax] || ++numVertices;\n                indices[by * size + bx] = indices[by * size + bx] || ++numVertices;\n                indices[cy * size + cx] = indices[cy * size + cx] || ++numVertices;\n                numTriangles++;\n            }\n        }\n        countElements(0, 0, max, max, max, 0);\n        countElements(max, max, 0, 0, 0, max);\n\n        const vertices = new Uint16Array(numVertices * 2);\n        const triangles = new Uint32Array(numTriangles * 3);\n        let triIndex = 0;\n\n        function processTriangle(ax, ay, bx, by, cx, cy) {\n            const mx = (ax + bx) >> 1;\n            const my = (ay + by) >> 1;\n\n            if (Math.abs(ax - cx) + Math.abs(ay - cy) > 1 && errors[my * size + mx] > maxError) {\n                // triangle doesn't approximate the surface well enough; drill down further\n                processTriangle(cx, cy, ax, ay, mx, my);\n                processTriangle(bx, by, cx, cy, mx, my);\n\n            } else {\n                // add a triangle\n                const a = indices[ay * size + ax] - 1;\n                const b = indices[by * size + bx] - 1;\n                const c = indices[cy * size + cx] - 1;\n\n                vertices[2 * a] = ax;\n                vertices[2 * a + 1] = ay;\n\n                vertices[2 * b] = bx;\n                vertices[2 * b + 1] = by;\n\n                vertices[2 * c] = cx;\n                vertices[2 * c + 1] = cy;\n\n                triangles[triIndex++] = a;\n                triangles[triIndex++] = b;\n                triangles[triIndex++] = c;\n            }\n        }\n        processTriangle(0, 0, max, max, max, 0);\n        processTriangle(max, max, 0, 0, 0, max);\n\n        return {vertices, triangles};\n    }\n}\n","import {\n    Cartographic,\n    Rectangle,\n    Ellipsoid,\n    WebMercatorTilingScheme,\n    TerrainProvider,\n    Math as CMath,\n    Event as CEvent,\n    Cartesian3,\n    BoundingSphere,\n    QuantizedMeshTerrainData,\n    HeightmapTerrainData,\n    // @ts-ignore\n    OrientedBoundingBox,\n    Credit,\n} from 'cesium';\nimport ndarray from 'ndarray';\n// @ts-ignore\nimport getPixels from './dom-pixels';\n// @ts-ignore\nimport Martini from '@mapbox/martini';\n\nfunction gsiTerrainToGrid(png: ndarray<number>) {\n    const gridSize = png.shape[0] + 1;\n    const terrain = new Float32Array(gridSize * gridSize);\n    const tileSize = png.shape[0];\n\n    // decode terrain values\n    for (let y = 0; y < tileSize; y++) {\n        for (let x = 0; x < tileSize; x++) {\n            const yc = y;\n            const r = png.get(x, yc, 0);\n            const g = png.get(x, yc, 1);\n            const b = png.get(x, yc, 2);\n            if (r === 128 && g === 0 && b === 0) {\n                terrain[y * gridSize + x] = 0;\n            } else {\n                terrain[y * gridSize + x] =\n                    r >= 128\n                        ? r * 655.36 + g * 2.56 + b * 0.01 + -167772.16\n                        : r * 655.36 + g * 2.56 + b * 0.01;\n            }\n        }\n    }\n    // backfill right and bottom borders\n    for (let x = 0; x < gridSize - 1; x++) {\n        terrain[gridSize * (gridSize - 1) + x] =\n            terrain[gridSize * (gridSize - 2) + x];\n    }\n    for (let y = 0; y < gridSize; y++) {\n        terrain[gridSize * y + gridSize - 1] =\n            terrain[gridSize * y + gridSize - 2];\n    }\n    return terrain;\n}\n\n// https://github.com/CesiumGS/cesium/blob/1.68/Source/Scene/MapboxImageryProvider.js#L42\n\ninterface GsiTerrainOpts {\n    ellipsoid?: Ellipsoid;\n}\n\nclass GsiTerrainProvider {\n    martini: any;\n    hasWaterMask = false;\n    hasVertexNormals = false;\n    credit = new Credit('地理院タイル');\n    ready: boolean;\n    readyPromise: Promise<boolean>;\n    availability = null;\n    errorEvent = new CEvent();\n    tilingScheme: TerrainProvider['tilingScheme'];\n    ellipsoid: Ellipsoid;\n    format: string;\n    tileSize: number = 256;\n\n    // @ts-ignore\n    constructor(opts: GsiTerrainOpts) {\n        this.martini = new Martini(this.tileSize + 1);\n        this.ready = true;\n        this.readyPromise = Promise.resolve(true);\n\n        this.errorEvent.addEventListener(console.log, this);\n        this.ellipsoid = opts.ellipsoid ?? Ellipsoid.WGS84;\n        this.format = 'png';\n\n        this.tilingScheme = new WebMercatorTilingScheme({\n            numberOfLevelZeroTilesX: 1,\n            numberOfLevelZeroTilesY: 1,\n            ellipsoid: this.ellipsoid,\n        });\n    }\n\n    async getPixels(url: string, type = ''): Promise<ndarray<number>> {\n        return new Promise((resolve, reject) => {\n            getPixels(url, type, (err: Error, array: ndarray<number>) => {\n                if (err != null) reject(err);\n                resolve(array);\n            });\n        });\n    }\n\n    async requestMapboxTile(x: number, y: number, z: number) {\n        const mx = this.tilingScheme.getNumberOfYTilesAtLevel(z);\n        const err = this.getLevelMaximumGeometricError(z);\n\n        const url = `https://cyberjapandata.gsi.go.jp/xyz/dem_png/${z}/${x}/${y}.png`;\n\n        try {\n            const pxArray = await this.getPixels(url);\n\n            const terrain = gsiTerrainToGrid(pxArray);\n\n            // set up mesh generator for a certain 2^k+1 grid size\n            // generate RTIN hierarchy from terrain data (an array of size^2 length)\n            const tile = this.martini.createTile(terrain);\n\n            // get a mesh (vertices and triangles indices) for a 10m error\n            //console.log(`Error level: ${err}`);\n            const mesh = tile.getMesh(err);\n\n            return await this.createQuantizedMeshData(x, y, z, tile, mesh);\n        } catch (err) {\n            // We fall back to a heightmap\n            console.error(\"requestMapboxTile\", err);\n            const v = Math.max(32 - 4 * z, 4);\n            return this.emptyHeightmap(v);\n        }\n    }\n\n    emptyHeightmap(samples: any) {\n        return new HeightmapTerrainData({\n            buffer: new Uint8Array(Array(samples * samples).fill(0)),\n            width: samples,\n            height: samples,\n        });\n    }\n\n    async createQuantizedMeshData(\n        x: number,\n        y: number,\n        z: number,\n        tile: any,\n        mesh: any,\n    ) {\n        const err = this.getLevelMaximumGeometricError(z);\n        const skirtHeight = err * 5;\n\n        const xvals = [];\n        const yvals = [];\n        const heightMeters = [];\n        const northIndices = [];\n        const southIndices = [];\n        const eastIndices = [];\n        const westIndices = [];\n\n        for (let ix = 0; ix < mesh.vertices.length / 2; ix++) {\n            const vertexIx = ix;\n            const px = mesh.vertices[ix * 2];\n            const py = mesh.vertices[ix * 2 + 1];\n            heightMeters.push(tile.terrain[py * (this.tileSize + 1) + px]);\n\n            if (py == 0) northIndices.push(vertexIx);\n            if (py == this.tileSize) southIndices.push(vertexIx);\n            if (px == 0) westIndices.push(vertexIx);\n            if (px == this.tileSize) eastIndices.push(vertexIx);\n\n            // This saves us from out-of-range values like 32768\n            const scalar = 32768 / this.tileSize;\n            let xv = px * scalar;\n            let yv = (this.tileSize - py) * scalar;\n\n            xvals.push(xv);\n            yvals.push(yv);\n        }\n\n        const maxHeight = Math.max.apply(this, heightMeters);\n        const minHeight = Math.min.apply(this, heightMeters);\n\n        const heights = heightMeters.map((d) => {\n            if (maxHeight - minHeight < 1) return 0;\n            return (d - minHeight) * (32767 / (maxHeight - minHeight));\n        });\n\n        const tileRect = this.tilingScheme.tileXYToRectangle(x, y, z);\n        const tileCenter = Cartographic.toCartesian(Rectangle.center(tileRect));\n        // Need to get maximum distance at zoom level\n        // tileRect.width is given in radians\n        // cos of half-tile-width allows us to use right-triangle relationship\n        const cosWidth = Math.cos(tileRect.width / 2); // half tile width since our ref point is at the center\n        // scale max height to max ellipsoid radius\n        // ... it might be better to use the radius of the entire\n        const ellipsoidHeight = maxHeight / this.ellipsoid.maximumRadius;\n        // cosine relationship to scale height in ellipsoid-relative coordinates\n        const occlusionHeight = (1 + ellipsoidHeight) / cosWidth;\n\n        const scaledCenter = Ellipsoid.WGS84.transformPositionToScaledSpace(\n            tileCenter,\n        );\n        const horizonOcclusionPoint = new Cartesian3(\n            scaledCenter.x,\n            scaledCenter.y,\n            occlusionHeight,\n        );\n\n        let orientedBoundingBox = null;\n        let boundingSphere: BoundingSphere;\n        if (tileRect.width < CMath.PI_OVER_TWO + CMath.EPSILON5) {\n            // @ts-ignore\n            orientedBoundingBox = OrientedBoundingBox.fromRectangle(\n                tileRect,\n                minHeight,\n                maxHeight,\n            );\n            // @ts-ignore\n            boundingSphere = BoundingSphere.fromOrientedBoundingBox(\n                orientedBoundingBox,\n            );\n        } else {\n            // If our bounding rectangle spans >= 90º, we should use the entire globe as a bounding sphere.\n            boundingSphere = new BoundingSphere(\n                Cartesian3.ZERO,\n                // radius (seems to be max height of Earth terrain?)\n                6379792.481506292,\n            );\n        }\n\n        const triangles = new Uint16Array(mesh.triangles);\n\n        // @ts-ignore\n\n        // If our tile has greater than ~1º size\n        if (tileRect.width > 0.02) {\n            // We need to be able to specify a minimum number of triangles...\n            return this.emptyHeightmap(64);\n        }\n\n        const quantizedVertices = new Uint16Array(\n            //verts\n            [...xvals, ...yvals, ...heights],\n        );\n\n        // SE NW NE\n        // NE NW SE\n\n        return new QuantizedMeshTerrainData({\n            minimumHeight: minHeight,\n            maximumHeight: maxHeight,\n            quantizedVertices,\n            indices: triangles,\n            // @ts-ignore\n            boundingSphere,\n            // @ts-ignore\n            orientedBoundingBox,\n            // @ts-ignore\n            horizonOcclusionPoint,\n            westIndices,\n            southIndices,\n            eastIndices,\n            northIndices,\n            westSkirtHeight: skirtHeight,\n            southSkirtHeight: skirtHeight,\n            eastSkirtHeight: skirtHeight,\n            northSkirtHeight: skirtHeight,\n            childTileMask: 14,\n        });\n    }\n\n    async requestTileGeometry(x: number, y: number, z: number) {\n        try {\n            const mapboxTile = await this.requestMapboxTile(x, y, z);\n            return mapboxTile;\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    getLevelMaximumGeometricError(level: any) {\n        const levelZeroMaximumGeometricError = TerrainProvider.getEstimatedLevelZeroGeometricErrorForAHeightmap(\n            this.tilingScheme.ellipsoid,\n            65,\n            this.tilingScheme.getNumberOfXTilesAtLevel(0),\n        );\n\n        // Scalar to control overzooming\n        // also seems to control zooming for imagery layers\n        const scalar = 4;\n\n        return levelZeroMaximumGeometricError / (1 << level);\n    }\n\n    getTileDataAvailable(x: number, y: number, z: number) {\n        return z <= 14;\n    }\n}\n\nexport default GsiTerrainProvider;\n"],"names":["iota","isBuffer","require$$0","require$$1","ndarray","require","defaultImage","url","cb","img","Image","crossOrigin","onload","canvas","document","createElement","width","height","context","getContext","drawImage","pixels","getImageData","Uint8Array","data","onerror","err","src","module","getPixels","type","gsiTerrainToGrid","png","gridSize","shape","terrain","Float32Array","tileSize","y","x","yc","r","get","g","b","GsiTerrainProvider","opts","_opts$ellipsoid","_classCallCheck","_defineProperty","Credit","CEvent","martini","Martini","ready","readyPromise","Promise","resolve","errorEvent","addEventListener","console","log","ellipsoid","Ellipsoid","WGS84","format","tilingScheme","WebMercatorTilingScheme","numberOfLevelZeroTilesX","numberOfLevelZeroTilesY","_createClass","key","value","_getPixels2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","abrupt","reject","array","stop","_x2","apply","_requestMapboxTile","_callee2","z","pxArray","tile","mesh","v","_callee2$","_context2","getNumberOfYTilesAtLevel","getLevelMaximumGeometricError","concat","sent","createTile","getMesh","createQuantizedMeshData","t0","error","Math","max","emptyHeightmap","requestMapboxTile","_x3","_x4","_x5","samples","HeightmapTerrainData","buffer","Array","fill","_createQuantizedMeshData","_callee3","skirtHeight","xvals","yvals","heightMeters","northIndices","southIndices","eastIndices","westIndices","ix","vertexIx","px","py","scalar","xv","yv","maxHeight","minHeight","heights","tileRect","tileCenter","cosWidth","ellipsoidHeight","occlusionHeight","scaledCenter","horizonOcclusionPoint","orientedBoundingBox","boundingSphere","triangles","quantizedVertices","_callee3$","_context3","vertices","push","min","map","d","tileXYToRectangle","Cartographic","toCartesian","Rectangle","center","cos","maximumRadius","transformPositionToScaledSpace","Cartesian3","CMath","PI_OVER_TWO","EPSILON5","OrientedBoundingBox","fromRectangle","BoundingSphere","fromOrientedBoundingBox","ZERO","Uint16Array","_toConsumableArray","QuantizedMeshTerrainData","minimumHeight","maximumHeight","indices","westSkirtHeight","southSkirtHeight","eastSkirtHeight","northSkirtHeight","childTileMask","_x6","_x7","_x8","_x9","_x10","_requestTileGeometry","_callee4","mapboxTile","_callee4$","_context4","requestTileGeometry","_x11","_x12","_x13","level","levelZeroMaximumGeometricError","TerrainProvider","getEstimatedLevelZeroGeometricErrorForAHeightmap","getNumberOfXTilesAtLevel","getTileDataAvailable"],"mappings":"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"}